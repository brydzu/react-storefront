// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-721 MuiDrawer-modal-732 RSFMenu-modal-720" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-721 MuiDrawer-modal-732 RSFMenu-modal-720" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-733 MuiDrawer-root-721 MuiDrawer-modal-732 RSFMenu-modal-720 MuiModal-hidden-734">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-736" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-723 RSFMenu-drawer-705 MuiDrawer-paperAnchorLeft-724" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-723 RSFMenu-drawer-705 MuiDrawer-paperAnchorLeft-724" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-738 MuiPaper-elevation16-756 MuiDrawer-paper-723 RSFMenu-drawer-705 MuiDrawer-paperAnchorLeft-724" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                              <Body theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-765 MuiList-padding-766 RSFMenu-list-706" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <Branch theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" divider={true} onClick={[Function: bound ]}>
                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                        <MergeListContext dense={false} alignItems="center">
                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-774">
                                                                            <ButtonBase className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-774" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                              <li className="MuiButtonBase-root-784 MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                  <ItemContent theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                        <div className="MuiListItemText-root-787">
                                                                                          Group 1
                                                                                        </div>
                                                                                      </ListItemText>
                                                                                    </WithStyles(ListItemText)>
                                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-715">
                                                                                      <ListItemIcon className="RSFMenu-listItemIcon-715" classes={{...}}>
                                                                                        <div className="MuiListItemIcon-root-793 RSFMenu-listItemIcon-715">
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-709">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-709">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-709">
                                                                                                <SvgIcon className="RSFMenu-icon-709" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-794 RSFMenu-icon-709" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </div>
                                                                                      </ListItemIcon>
                                                                                    </WithStyles(ListItemIcon)>
                                                                                  </ItemContent>
                                                                                </inject-ItemContent-with-app>
                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-807" childFactory={[Function: childFactory]}>
                                                                                        <span className="MuiTouchRipple-root-807" />
                                                                                      </TransitionGroup>
                                                                                    </TouchRipple>
                                                                                  </WithStyles(TouchRipple)>
                                                                                </NoSsr>
                                                                              </li>
                                                                            </ButtonBase>
                                                                          </WithStyles(ButtonBase)>
                                                                        </MergeListContext>
                                                                      </ListItem>
                                                                    </WithStyles(ListItem)>
                                                                  </MenuItem>
                                                                </WithStyles(MenuItem)>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-803" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-805">
                                                                          <div className="MuiCollapse-wrapperInner-806">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-765 RSFMenu-list-706 MuiList-padding-766" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                          <Branch theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                            <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                              <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" divider={true} onClick={[Function: bound ]}>
                                                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                    <MergeListContext dense={false} alignItems="center">
                                                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-774">
                                                                                                        <ButtonBase className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-774" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                          <li className="MuiButtonBase-root-784 MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-expander-716 MuiMenuItem-gutters-770" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                            <inject-ItemContent-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                              <ItemContent theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                                <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                                                  <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                    <div className="MuiListItemText-root-787">
                                                                                                                      Item 1
                                                                                                                    </div>
                                                                                                                  </ListItemText>
                                                                                                                </WithStyles(ListItemText)>
                                                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-715">
                                                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-715" classes={{...}}>
                                                                                                                    <div className="MuiListItemIcon-root-793 RSFMenu-listItemIcon-715">
                                                                                                                      <pure(ExpandMoreIcon) className="RSFMenu-icon-709">
                                                                                                                        <ExpandMoreIcon className="RSFMenu-icon-709">
                                                                                                                          <WithStyles(SvgIcon) className="RSFMenu-icon-709">
                                                                                                                            <SvgIcon className="RSFMenu-icon-709" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                              <svg className="MuiSvgIcon-root-794 RSFMenu-icon-709" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                                <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                                <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                              </svg>
                                                                                                                            </SvgIcon>
                                                                                                                          </WithStyles(SvgIcon)>
                                                                                                                        </ExpandMoreIcon>
                                                                                                                      </pure(ExpandMoreIcon)>
                                                                                                                    </div>
                                                                                                                  </ListItemIcon>
                                                                                                                </WithStyles(ListItemIcon)>
                                                                                                              </ItemContent>
                                                                                                            </inject-ItemContent-with-app>
                                                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-807" childFactory={[Function: childFactory]}>
                                                                                                                    <span className="MuiTouchRipple-root-807" />
                                                                                                                  </TransitionGroup>
                                                                                                                </TouchRipple>
                                                                                                              </WithStyles(TouchRipple)>
                                                                                                            </NoSsr>
                                                                                                          </li>
                                                                                                        </ButtonBase>
                                                                                                      </WithStyles(ButtonBase)>
                                                                                                    </MergeListContext>
                                                                                                  </ListItem>
                                                                                                </WithStyles(ListItem)>
                                                                                              </MenuItem>
                                                                                            </WithStyles(MenuItem)>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-803" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-805">
                                                                                                      <div className="MuiCollapse-wrapperInner-806">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-765 RSFMenu-list-706 MuiList-padding-766" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                      <Leaf theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-713" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-713" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-713" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-735 RSFMenu-link-713" style={[undefined]} onClick={[Function]} href="/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={[undefined]} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={[undefined]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-774">
                                                                                                                                            <ButtonBase className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-774" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-784 MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                                        <div className="MuiListItemText-root-787">
                                                                                                                                                          Child 1
                                                                                                                                                        </div>
                                                                                                                                                      </ListItemText>
                                                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-807" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-807" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                        <inject-Item-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Leaf-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <Leaf theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-713" server={false} state={{...}} onClick={[Function]}>
                                                                  <inject-Link to="/leaf" className="RSFMenu-link-713" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                    <Link to="/leaf" className="RSFMenu-link-713" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                      <a data-moov-link="on" className="RSFLink-root-735 RSFMenu-link-713" style={[undefined]} onClick={[Function]} href="/leaf">
                                                                        <WithStyles(MenuItem) button={true} divider={true} selected={[undefined]} classes={{...}}>
                                                                          <MenuItem button={true} divider={true} selected={[undefined]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" divider={true}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-774">
                                                                                    <ButtonBase className="MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-774" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-784 MuiListItem-root-772 MuiListItem-default-775 MuiListItem-gutters-780 MuiListItem-divider-779 MuiListItem-button-781 MuiMenuItem-root-769 RSFMenu-listItem-712 RSFMenu-leaf-717 MuiMenuItem-gutters-770" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                        <inject-ItemContent-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                          <ItemContent theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                              <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                                <div className="MuiListItemText-root-787">
                                                                                                  Leaf
                                                                                                </div>
                                                                                              </ListItemText>
                                                                                            </WithStyles(ListItemText)>
                                                                                          </ItemContent>
                                                                                        </inject-ItemContent-with-app>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-807" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-807" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                      </a>
                                                                    </Link>
                                                                  </inject-Link>
                                                                </WithStyles(inject-Link)>
                                                              </Leaf>
                                                            </inject-Leaf-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-735" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-830 MuiDrawer-modal-841 RSFMenu-modal-829" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-830 MuiDrawer-modal-841 RSFMenu-modal-829" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-842 MuiDrawer-root-830 MuiDrawer-modal-841 RSFMenu-modal-829 MuiModal-hidden-843">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-845" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-832 RSFMenu-drawer-814 MuiDrawer-paperAnchorLeft-833" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-832 RSFMenu-drawer-814 MuiDrawer-paperAnchorLeft-833" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-847 MuiPaper-elevation16-865 MuiDrawer-paper-832 RSFMenu-drawer-814 MuiDrawer-paperAnchorLeft-833" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                              <Body theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-874 MuiList-padding-875 RSFMenu-list-815" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <Branch theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" divider={true} onClick={[Function: bound ]}>
                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                        <MergeListContext dense={false} alignItems="center">
                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-883">
                                                                            <ButtonBase className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-883" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                              <li className="MuiButtonBase-root-893 MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                  <ItemContent theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                        <div className="MuiListItemText-root-896">
                                                                                          Group 1
                                                                                        </div>
                                                                                      </ListItemText>
                                                                                    </WithStyles(ListItemText)>
                                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-824">
                                                                                      <ListItemIcon className="RSFMenu-listItemIcon-824" classes={{...}}>
                                                                                        <div className="MuiListItemIcon-root-902 RSFMenu-listItemIcon-824">
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-818">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-818">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-818">
                                                                                                <SvgIcon className="RSFMenu-icon-818" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-903 RSFMenu-icon-818" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </div>
                                                                                      </ListItemIcon>
                                                                                    </WithStyles(ListItemIcon)>
                                                                                  </ItemContent>
                                                                                </inject-ItemContent-with-app>
                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-916" childFactory={[Function: childFactory]}>
                                                                                        <span className="MuiTouchRipple-root-916" />
                                                                                      </TransitionGroup>
                                                                                    </TouchRipple>
                                                                                  </WithStyles(TouchRipple)>
                                                                                </NoSsr>
                                                                              </li>
                                                                            </ButtonBase>
                                                                          </WithStyles(ButtonBase)>
                                                                        </MergeListContext>
                                                                      </ListItem>
                                                                    </WithStyles(ListItem)>
                                                                  </MenuItem>
                                                                </WithStyles(MenuItem)>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-912" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-914">
                                                                          <div className="MuiCollapse-wrapperInner-915">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-874 RSFMenu-list-815 MuiList-padding-875" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                          <Branch theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                            <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                              <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" divider={true} onClick={[Function: bound ]}>
                                                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                    <MergeListContext dense={false} alignItems="center">
                                                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-883">
                                                                                                        <ButtonBase className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-883" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                          <li className="MuiButtonBase-root-893 MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-expander-825 MuiMenuItem-gutters-879" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                            <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                              <ItemContent theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                                <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                                                  <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                    <div className="MuiListItemText-root-896">
                                                                                                                      Item 1
                                                                                                                    </div>
                                                                                                                  </ListItemText>
                                                                                                                </WithStyles(ListItemText)>
                                                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-824">
                                                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-824" classes={{...}}>
                                                                                                                    <div className="MuiListItemIcon-root-902 RSFMenu-listItemIcon-824">
                                                                                                                      <pure(ExpandMoreIcon) className="RSFMenu-icon-818">
                                                                                                                        <ExpandMoreIcon className="RSFMenu-icon-818">
                                                                                                                          <WithStyles(SvgIcon) className="RSFMenu-icon-818">
                                                                                                                            <SvgIcon className="RSFMenu-icon-818" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                              <svg className="MuiSvgIcon-root-903 RSFMenu-icon-818" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                                <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                                <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                              </svg>
                                                                                                                            </SvgIcon>
                                                                                                                          </WithStyles(SvgIcon)>
                                                                                                                        </ExpandMoreIcon>
                                                                                                                      </pure(ExpandMoreIcon)>
                                                                                                                    </div>
                                                                                                                  </ListItemIcon>
                                                                                                                </WithStyles(ListItemIcon)>
                                                                                                              </ItemContent>
                                                                                                            </inject-ItemContent-with-app>
                                                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-916" childFactory={[Function: childFactory]}>
                                                                                                                    <span className="MuiTouchRipple-root-916" />
                                                                                                                  </TransitionGroup>
                                                                                                                </TouchRipple>
                                                                                                              </WithStyles(TouchRipple)>
                                                                                                            </NoSsr>
                                                                                                          </li>
                                                                                                        </ButtonBase>
                                                                                                      </WithStyles(ButtonBase)>
                                                                                                    </MergeListContext>
                                                                                                  </ListItem>
                                                                                                </WithStyles(ListItem)>
                                                                                              </MenuItem>
                                                                                            </WithStyles(MenuItem)>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-912" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-914">
                                                                                                      <div className="MuiCollapse-wrapperInner-915">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-874 RSFMenu-list-815 MuiList-padding-875" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                      <Leaf theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-822" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-822" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-822" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-844 RSFMenu-link-822" style={[undefined]} onClick={[Function]} href="/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={[undefined]} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={[undefined]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-883">
                                                                                                                                            <ButtonBase className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-883" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-893 MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                                        <div className="MuiListItemText-root-896">
                                                                                                                                                          Child 1
                                                                                                                                                        </div>
                                                                                                                                                      </ListItemText>
                                                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-916" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-916" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                        <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Leaf-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <Leaf theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-822" server={false} state={{...}} onClick={[Function]}>
                                                                  <inject-Link to="/leaf" className="RSFMenu-link-822" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                    <Link to="/leaf" className="RSFMenu-link-822" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                      <a data-moov-link="on" className="RSFLink-root-844 RSFMenu-link-822" style={[undefined]} onClick={[Function]} href="/leaf">
                                                                        <WithStyles(MenuItem) button={true} divider={true} selected={[undefined]} classes={{...}}>
                                                                          <MenuItem button={true} divider={true} selected={[undefined]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" divider={true}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-883">
                                                                                    <ButtonBase className="MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-883" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-893 MuiListItem-root-881 MuiListItem-default-884 MuiListItem-gutters-889 MuiListItem-divider-888 MuiListItem-button-890 MuiMenuItem-root-878 RSFMenu-listItem-821 RSFMenu-leaf-826 MuiMenuItem-gutters-879" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                        <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                          <ItemContent theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                              <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                                <div className="MuiListItemText-root-896">
                                                                                                  Leaf
                                                                                                </div>
                                                                                              </ListItemText>
                                                                                            </WithStyles(ListItemText)>
                                                                                          </ItemContent>
                                                                                        </inject-ItemContent-with-app>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-916" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-916" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                      </a>
                                                                    </Link>
                                                                  </inject-Link>
                                                                </WithStyles(inject-Link)>
                                                              </Leaf>
                                                            </inject-Leaf-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-844" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: renderer]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: renderer]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-939 MuiDrawer-modal-950 RSFMenu-modal-938" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-939 MuiDrawer-modal-950 RSFMenu-modal-938" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-951 MuiDrawer-root-939 MuiDrawer-modal-950 RSFMenu-modal-938 MuiModal-hidden-952">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-954" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-941 RSFMenu-drawer-923 MuiDrawer-paperAnchorLeft-942" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-941 RSFMenu-drawer-923 MuiDrawer-paperAnchorLeft-942" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-956 MuiPaper-elevation16-974 MuiDrawer-paper-941 RSFMenu-drawer-923 MuiDrawer-paperAnchorLeft-942" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                              <Body theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-983 MuiList-padding-984 RSFMenu-list-924" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <Branch theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" divider={true} onClick={[Function: bound ]}>
                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                        <MergeListContext dense={false} alignItems="center">
                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-992">
                                                                            <ButtonBase className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-992" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                              <li className="MuiButtonBase-root-1002 MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                  <ItemContent theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                    <div>
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ItemContent>
                                                                                </inject-ItemContent-with-app>
                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1009" childFactory={[Function: childFactory]}>
                                                                                        <span className="MuiTouchRipple-root-1009" />
                                                                                      </TransitionGroup>
                                                                                    </TouchRipple>
                                                                                  </WithStyles(TouchRipple)>
                                                                                </NoSsr>
                                                                              </li>
                                                                            </ButtonBase>
                                                                          </WithStyles(ButtonBase)>
                                                                        </MergeListContext>
                                                                      </ListItem>
                                                                    </WithStyles(ListItem)>
                                                                  </MenuItem>
                                                                </WithStyles(MenuItem)>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-1005" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-1007">
                                                                          <div className="MuiCollapse-wrapperInner-1008">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-983 RSFMenu-list-924 MuiList-padding-984" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                          <Branch theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                            <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                              <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" divider={true} onClick={[Function: bound ]}>
                                                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                    <MergeListContext dense={false} alignItems="center">
                                                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-992">
                                                                                                        <ButtonBase className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-992" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                          <li className="MuiButtonBase-root-1002 MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-expander-934 MuiMenuItem-gutters-988" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                            <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                              <ItemContent theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                                <div>
                                                                                                                  Item 1
                                                                                                                </div>
                                                                                                              </ItemContent>
                                                                                                            </inject-ItemContent-with-app>
                                                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1009" childFactory={[Function: childFactory]}>
                                                                                                                    <span className="MuiTouchRipple-root-1009" />
                                                                                                                  </TransitionGroup>
                                                                                                                </TouchRipple>
                                                                                                              </WithStyles(TouchRipple)>
                                                                                                            </NoSsr>
                                                                                                          </li>
                                                                                                        </ButtonBase>
                                                                                                      </WithStyles(ButtonBase)>
                                                                                                    </MergeListContext>
                                                                                                  </ListItem>
                                                                                                </WithStyles(ListItem)>
                                                                                              </MenuItem>
                                                                                            </WithStyles(MenuItem)>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-1005" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-1007">
                                                                                                      <div className="MuiCollapse-wrapperInner-1008">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-983 RSFMenu-list-924 MuiList-padding-984" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                      <Leaf theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-931" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-931" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-931" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-953 RSFMenu-link-931" style={[undefined]} onClick={[Function]} href="/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={[undefined]} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={[undefined]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-992">
                                                                                                                                            <ButtonBase className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-992" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-1002 MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                    <div>
                                                                                                                                                      Child 1
                                                                                                                                                    </div>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1009" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-1009" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                        <inject-Item-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Leaf-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <Leaf theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-931" server={false} state={{...}} onClick={[Function]}>
                                                                  <inject-Link to="/leaf" className="RSFMenu-link-931" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                    <Link to="/leaf" className="RSFMenu-link-931" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                      <a data-moov-link="on" className="RSFLink-root-953 RSFMenu-link-931" style={[undefined]} onClick={[Function]} href="/leaf">
                                                                        <WithStyles(MenuItem) button={true} divider={true} selected={[undefined]} classes={{...}}>
                                                                          <MenuItem button={true} divider={true} selected={[undefined]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" divider={true}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-992">
                                                                                    <ButtonBase className="MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-992" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-1002 MuiListItem-root-990 MuiListItem-default-993 MuiListItem-gutters-998 MuiListItem-divider-997 MuiListItem-button-999 MuiMenuItem-root-987 RSFMenu-listItem-930 RSFMenu-leaf-935 MuiMenuItem-gutters-988" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                        <inject-ItemContent-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                          <ItemContent theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                            <div>
                                                                                              Leaf
                                                                                            </div>
                                                                                          </ItemContent>
                                                                                        </inject-ItemContent-with-app>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1009" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-1009" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                      </a>
                                                                    </Link>
                                                                  </inject-Link>
                                                                </WithStyles(inject-Link)>
                                                              </Leaf>
                                                            </inject-Leaf-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-953" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-126 MuiDrawer-modal-137 RSFMenu-modal-125" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-126 MuiDrawer-modal-137 RSFMenu-modal-125" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-138 MuiDrawer-root-126 MuiDrawer-modal-137 RSFMenu-modal-125 MuiModal-hidden-139">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-141" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-128 RSFMenu-drawer-110 MuiDrawer-paperAnchorLeft-129" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-128 RSFMenu-drawer-110 MuiDrawer-paperAnchorLeft-129" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-143 MuiPaper-elevation16-161 MuiDrawer-paper-128 RSFMenu-drawer-110 MuiDrawer-paperAnchorLeft-129" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                              <Body theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                                <div className="RSFMenu-hbox-116" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-170 RSFMenu-list-111 MuiList-padding-171" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                            <Item theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                <Branch theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                  <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-174 RSFMenu-listItem-117 MuiMenuItem-gutters-175" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-174 RSFMenu-listItem-117 MuiMenuItem-gutters-175" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-177 MuiListItem-default-180 MuiListItem-gutters-185 MuiListItem-divider-184 MuiListItem-button-186 MuiMenuItem-root-174 RSFMenu-listItem-117 MuiMenuItem-gutters-175" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-179">
                                                                              <ButtonBase className="MuiListItem-root-177 MuiListItem-default-180 MuiListItem-gutters-185 MuiListItem-divider-184 MuiListItem-button-186 MuiMenuItem-root-174 RSFMenu-listItem-117 MuiMenuItem-gutters-175" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-179" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-189 MuiListItem-root-177 MuiListItem-default-180 MuiListItem-gutters-185 MuiListItem-divider-184 MuiListItem-button-186 MuiMenuItem-root-174 RSFMenu-listItem-117 MuiMenuItem-gutters-175" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                    <ItemContent theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-192">
                                                                                            Group 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-120">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-120" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-198 RSFMenu-listItemIcon-120">
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-114">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-114">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-114">
                                                                                                  <SvgIcon className="RSFMenu-icon-114" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-199 RSFMenu-icon-114" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-208" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-208" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-140" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-231 MuiDrawer-modal-242 RSFMenu-modal-230" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-231 MuiDrawer-modal-242 RSFMenu-modal-230" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-243 MuiDrawer-root-231 MuiDrawer-modal-242 RSFMenu-modal-230 MuiModal-hidden-244">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-246" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-233 RSFMenu-drawer-215 MuiDrawer-paperAnchorLeft-234" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-233 RSFMenu-drawer-215 MuiDrawer-paperAnchorLeft-234" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-248 MuiPaper-elevation16-266 MuiDrawer-paper-233 RSFMenu-drawer-215 MuiDrawer-paperAnchorLeft-234" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                              <Body theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                                <div className="RSFMenu-hbox-221" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-275 RSFMenu-list-216 MuiList-padding-276" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                            <Item theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                <Branch theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                  <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-279 RSFMenu-listItem-222 MuiMenuItem-gutters-280" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-279 RSFMenu-listItem-222 MuiMenuItem-gutters-280" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-282 MuiListItem-default-285 MuiListItem-gutters-290 MuiListItem-divider-289 MuiListItem-button-291 MuiMenuItem-root-279 RSFMenu-listItem-222 MuiMenuItem-gutters-280" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-284">
                                                                              <ButtonBase className="MuiListItem-root-282 MuiListItem-default-285 MuiListItem-gutters-290 MuiListItem-divider-289 MuiListItem-button-291 MuiMenuItem-root-279 RSFMenu-listItem-222 MuiMenuItem-gutters-280" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-284" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-294 MuiListItem-root-282 MuiListItem-default-285 MuiListItem-gutters-290 MuiListItem-divider-289 MuiListItem-button-291 MuiMenuItem-root-279 RSFMenu-listItem-222 MuiMenuItem-gutters-280" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                    <ItemContent theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-297">
                                                                                            Group 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-225">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-225" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-303 RSFMenu-listItemIcon-225">
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-219">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-219">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-219">
                                                                                                  <SvgIcon className="RSFMenu-icon-219" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-304 RSFMenu-icon-219" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-313" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-313" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-245" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-17 MuiDrawer-modal-28 RSFMenu-modal-16" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-17 MuiDrawer-modal-28 RSFMenu-modal-16" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-29 MuiDrawer-root-17 MuiDrawer-modal-28 RSFMenu-modal-16 MuiModal-hidden-30">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-32" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-19 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-20" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-19 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-20" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-34 MuiPaper-elevation16-52 MuiDrawer-paper-19 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-20" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                              <Body theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
                                                <MenuList classes={{...}}>
                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-61 MuiList-padding-62 RSFMenu-list-2" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                        <inject-Item-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                          <Item theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <inject-Branch-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                              <Branch theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" divider={true} onClick={[Function: bound ]}>
                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                        <MergeListContext dense={false} alignItems="center">
                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-70">
                                                                            <ButtonBase className="MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-70" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                              <li className="MuiButtonBase-root-80 MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                  <ItemContent theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={1} item={{...}} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                        <div className="MuiListItemText-root-83">
                                                                                          Group 1
                                                                                        </div>
                                                                                      </ListItemText>
                                                                                    </WithStyles(ListItemText)>
                                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                                      <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                                        <div className="MuiListItemIcon-root-89 RSFMenu-listItemIcon-11">
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                                <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-90 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </div>
                                                                                      </ListItemIcon>
                                                                                    </WithStyles(ListItemIcon)>
                                                                                  </ItemContent>
                                                                                </inject-ItemContent-with-app>
                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-103" childFactory={[Function: childFactory]}>
                                                                                        <span className="MuiTouchRipple-root-103" />
                                                                                      </TransitionGroup>
                                                                                    </TouchRipple>
                                                                                  </WithStyles(TouchRipple)>
                                                                                </NoSsr>
                                                                              </li>
                                                                            </ButtonBase>
                                                                          </WithStyles(ButtonBase)>
                                                                        </MergeListContext>
                                                                      </ListItem>
                                                                    </WithStyles(ListItem)>
                                                                  </MenuItem>
                                                                </WithStyles(MenuItem)>
                                                                <WithStyles(Collapse) in={false} timeout="auto">
                                                                  <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                    <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                      <div className="MuiCollapse-container-99" style={{...}}>
                                                                        <div className="MuiCollapse-wrapper-101">
                                                                          <div className="MuiCollapse-wrapperInner-102">
                                                                            <MenuList component="div" classes={{...}}>
                                                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                  <div className="MuiList-root-61 RSFMenu-list-2 MuiList-padding-62" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                    <inject-Item-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                      <Item theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                        <inject-Branch-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                          <Branch theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                            <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                              <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" divider={true} onClick={[Function: bound ]}>
                                                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                    <MergeListContext dense={false} alignItems="center">
                                                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-70">
                                                                                                        <ButtonBase className="MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-70" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                          <li className="MuiButtonBase-root-80 MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-66" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                                            <inject-ItemContent-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                              <ItemContent theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={2} item={{...}} tabIndex={0} onFocus={[Function]} leaf={false} showExpander={true}>
                                                                                                                <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                                                  <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                    <div className="MuiListItemText-root-83">
                                                                                                                      Item 1
                                                                                                                    </div>
                                                                                                                  </ListItemText>
                                                                                                                </WithStyles(ListItemText)>
                                                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                                                                    <div className="MuiListItemIcon-root-89 RSFMenu-listItemIcon-11">
                                                                                                                      <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                                                                        <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                                                                          <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                                                            <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                              <svg className="MuiSvgIcon-root-90 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                                <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                                <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                              </svg>
                                                                                                                            </SvgIcon>
                                                                                                                          </WithStyles(SvgIcon)>
                                                                                                                        </ExpandMoreIcon>
                                                                                                                      </pure(ExpandMoreIcon)>
                                                                                                                    </div>
                                                                                                                  </ListItemIcon>
                                                                                                                </WithStyles(ListItemIcon)>
                                                                                                              </ItemContent>
                                                                                                            </inject-ItemContent-with-app>
                                                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-103" childFactory={[Function: childFactory]}>
                                                                                                                    <span className="MuiTouchRipple-root-103" />
                                                                                                                  </TransitionGroup>
                                                                                                                </TouchRipple>
                                                                                                              </WithStyles(TouchRipple)>
                                                                                                            </NoSsr>
                                                                                                          </li>
                                                                                                        </ButtonBase>
                                                                                                      </WithStyles(ButtonBase)>
                                                                                                    </MergeListContext>
                                                                                                  </ListItem>
                                                                                                </WithStyles(ListItem)>
                                                                                              </MenuItem>
                                                                                            </WithStyles(MenuItem)>
                                                                                            <WithStyles(Collapse) in={false} timeout="auto">
                                                                                              <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                                <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                                  <div className="MuiCollapse-container-99" style={{...}}>
                                                                                                    <div className="MuiCollapse-wrapper-101">
                                                                                                      <div className="MuiCollapse-wrapperInner-102">
                                                                                                        <MenuList component="div" classes={{...}}>
                                                                                                          <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                                            <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                              <div className="MuiList-root-61 RSFMenu-list-2 MuiList-padding-62" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                                                <inject-Item-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                  <Item theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                    <inject-Leaf-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                      <Leaf theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                                                        <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} onClick={[Function]}>
                                                                                                                          <inject-Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                            <Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                              <a data-moov-link="on" className="RSFLink-root-31 RSFMenu-link-9" style={[undefined]} onClick={[Function]} href="/item1/child1">
                                                                                                                                <WithStyles(MenuItem) button={true} divider={true} selected={[undefined]} classes={{...}}>
                                                                                                                                  <MenuItem button={true} divider={true} selected={[undefined]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                                                    <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-66" divider={true}>
                                                                                                                                      <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-66" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                                                        <MergeListContext dense={false} alignItems="center">
                                                                                                                                          <WithStyles(ButtonBase) className="MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-66" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-70">
                                                                                                                                            <ButtonBase className="MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-66" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-70" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                                              <li className="MuiButtonBase-root-80 MuiListItem-root-68 MuiListItem-default-71 MuiListItem-gutters-76 MuiListItem-divider-75 MuiListItem-button-77 MuiMenuItem-root-65 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-66" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                                                <inject-ItemContent-with-app theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                  <ItemContent theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" depth={3} item={{...}} tabIndex={0} onFocus={[Function]} showExpander={false} leaf={true}>
                                                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                                        <div className="MuiListItemText-root-83">
                                                                                                                                                          Child 1
                                                                                                                                                        </div>
                                                                                                                                                      </ListItemText>
                                                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                                                  </ItemContent>
                                                                                                                                                </inject-ItemContent-with-app>
                                                                                                                                                <NoSsr defer={false} fallback={{...}}>
                                                                                                                                                  <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                                    <TouchRipple center={false} classes={{...}}>
                                                                                                                                                      <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-103" childFactory={[Function: childFactory]}>
                                                                                                                                                        <span className="MuiTouchRipple-root-103" />
                                                                                                                                                      </TransitionGroup>
                                                                                                                                                    </TouchRipple>
                                                                                                                                                  </WithStyles(TouchRipple)>
                                                                                                                                                </NoSsr>
                                                                                                                                              </li>
                                                                                                                                            </ButtonBase>
                                                                                                                                          </WithStyles(ButtonBase)>
                                                                                                                                        </MergeListContext>
                                                                                                                                      </ListItem>
                                                                                                                                    </WithStyles(ListItem)>
                                                                                                                                  </MenuItem>
                                                                                                                                </WithStyles(MenuItem)>
                                                                                                                              </a>
                                                                                                                            </Link>
                                                                                                                          </inject-Link>
                                                                                                                        </WithStyles(inject-Link)>
                                                                                                                      </Leaf>
                                                                                                                    </inject-Leaf-with-app>
                                                                                                                  </Item>
                                                                                                                </inject-Item-with-app>
                                                                                                              </div>
                                                                                                            </List>
                                                                                                          </WithStyles(List)>
                                                                                                        </MenuList>
                                                                                                      </div>
                                                                                                    </div>
                                                                                                  </div>
                                                                                                </Transition>
                                                                                              </Collapse>
                                                                                            </WithStyles(Collapse)>
                                                                                          </Branch>
                                                                                        </inject-Branch-with-app>
                                                                                      </Item>
                                                                                    </inject-Item-with-app>
                                                                                  </div>
                                                                                </List>
                                                                              </WithStyles(List)>
                                                                            </MenuList>
                                                                          </div>
                                                                        </div>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </WithStyles(Collapse)>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </MenuList>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-31" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-581 MuiDrawer-modal-592 RSFMenu-modal-580" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-581 MuiDrawer-modal-592 RSFMenu-modal-580" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-593 MuiDrawer-root-581 MuiDrawer-modal-592 RSFMenu-modal-580 MuiModal-hidden-594">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-596" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-583 RSFMenu-drawer-565 MuiDrawer-paperAnchorLeft-584" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-583 RSFMenu-drawer-565 MuiDrawer-paperAnchorLeft-584" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-598 MuiPaper-elevation16-616 MuiDrawer-paper-583 RSFMenu-drawer-565 MuiDrawer-paperAnchorLeft-584" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                              <Body theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                                <div className="RSFMenu-hbox-571" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-625 RSFMenu-list-566 MuiList-padding-626" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                            <Item theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                <Branch theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                  <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-634">
                                                                              <ButtonBase className="MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-634" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-644 MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                    <ItemContent theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-647">
                                                                                            Group 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-575">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-575" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-653 RSFMenu-listItemIcon-575">
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-569">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-569">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-569">
                                                                                                  <SvgIcon className="RSFMenu-icon-569" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-654 RSFMenu-icon-569" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-663" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-663" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-625 RSFMenu-list-566 MuiList-padding-626" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <WithStyles(MenuItem) divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]}>
                                                            <MenuItem divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                              <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-629 MuiMenuItem-gutters-630" divider={true} onClick={[Function]} onFocus={[Function]}>
                                                                <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-629 MuiMenuItem-gutters-630" divider={true} onClick={[Function]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                  <MergeListContext dense={false} alignItems="center">
                                                                    <WithStyles(ButtonBase) className="MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 MuiMenuItem-gutters-630" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-634">
                                                                      <ButtonBase className="MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 MuiMenuItem-gutters-630" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-634" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                        <li className="MuiButtonBase-root-644 MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 MuiMenuItem-gutters-630" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function]}>
                                                                          <WithStyles(ListItemIcon) classes={{...}}>
                                                                            <ListItemIcon classes={{...}}>
                                                                              <div className="MuiListItemIcon-root-653 RSFMenu-header-568">
                                                                                <pure(ChevronLeftIcon) className="RSFMenu-icon-569">
                                                                                  <ChevronLeftIcon className="RSFMenu-icon-569">
                                                                                    <WithStyles(SvgIcon) className="RSFMenu-icon-569">
                                                                                      <SvgIcon className="RSFMenu-icon-569" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                        <svg className="MuiSvgIcon-root-654 RSFMenu-icon-569" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                          <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                          <path fill="none" d="M0 0h24v24H0z" />
                                                                                        </svg>
                                                                                      </SvgIcon>
                                                                                    </WithStyles(SvgIcon)>
                                                                                  </ChevronLeftIcon>
                                                                                </pure(ChevronLeftIcon)>
                                                                              </div>
                                                                            </ListItemIcon>
                                                                          </WithStyles(ListItemIcon)>
                                                                          <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                            <ListItemText primary={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                              <div className="MuiListItemText-root-647 RSFMenu-headerText-570">
                                                                                <WithStyles(Typography) variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-650" component="span">
                                                                                  <Typography variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-650" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                                                    <span className="MuiTypography-root-670 MuiTypography-subtitle1-688 MuiListItemText-primary-650">
                                                                                      <div className="RSFMenu-headerText-570">
                                                                                        Group 1
                                                                                         
                                                                                      </div>
                                                                                    </span>
                                                                                  </Typography>
                                                                                </WithStyles(Typography)>
                                                                              </div>
                                                                            </ListItemText>
                                                                          </WithStyles(ListItemText)>
                                                                          <NoSsr defer={false} fallback={{...}}>
                                                                            <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                              <TouchRipple center={false} classes={{...}}>
                                                                                <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-663" childFactory={[Function: childFactory]}>
                                                                                  <span className="MuiTouchRipple-root-663" />
                                                                                </TransitionGroup>
                                                                              </TouchRipple>
                                                                            </WithStyles(TouchRipple)>
                                                                          </NoSsr>
                                                                        </li>
                                                                      </ButtonBase>
                                                                    </WithStyles(ButtonBase)>
                                                                  </MergeListContext>
                                                                </ListItem>
                                                              </WithStyles(ListItem)>
                                                            </MenuItem>
                                                          </WithStyles(MenuItem)>
                                                          <inject-Item-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={1} tabIndex={-1} onFocus={[Function]}>
                                                            <Item theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={1} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={1} tabIndex={-1} onFocus={[Function]}>
                                                                <Branch theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={1} tabIndex={-1} onFocus={[Function]}>
                                                                  <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-634">
                                                                              <ButtonBase className="MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-634" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-644 MuiListItem-root-632 MuiListItem-default-635 MuiListItem-gutters-640 MuiListItem-divider-639 MuiListItem-button-641 MuiMenuItem-root-629 RSFMenu-listItem-572 MuiMenuItem-gutters-630" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={1} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={[undefined]}>
                                                                                    <ItemContent theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={1} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={[undefined]}>
                                                                                      <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                        <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-647">
                                                                                            Item 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-575">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-575" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-653 RSFMenu-listItemIcon-575">
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-569">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-569">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-569">
                                                                                                  <SvgIcon className="RSFMenu-icon-569" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-654 RSFMenu-icon-569" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-663" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-663" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-595" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-336 MuiDrawer-modal-347 RSFMenu-modal-335" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-336 MuiDrawer-modal-347 RSFMenu-modal-335" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-348 MuiDrawer-root-336 MuiDrawer-modal-347 RSFMenu-modal-335 MuiModal-hidden-349">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-351" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-338 RSFMenu-drawer-320 MuiDrawer-paperAnchorLeft-339" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-338 RSFMenu-drawer-320 MuiDrawer-paperAnchorLeft-339" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-353 MuiPaper-elevation16-371 MuiDrawer-paper-338 RSFMenu-drawer-320 MuiDrawer-paperAnchorLeft-339" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                              <Body theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
                                                <div className="RSFMenu-hbox-326" style={{...}}>
                                                  <MenuList style={{...}} classes={{...}}>
                                                    <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                      <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                        <ul className="MuiList-root-380 RSFMenu-list-321 MuiList-padding-381" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                          <inject-Item-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                            <Item theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                              <inject-Branch-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                <Branch theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]}>
                                                                  <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <MenuItem button={true} divider={true} onClick={[Function: bound ]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                      <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-384 RSFMenu-listItem-327 MuiMenuItem-gutters-385" divider={true} onClick={[Function: bound ]}>
                                                                        <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-384 RSFMenu-listItem-327 MuiMenuItem-gutters-385" divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-387 MuiListItem-default-390 MuiListItem-gutters-395 MuiListItem-divider-394 MuiListItem-button-396 MuiMenuItem-root-384 RSFMenu-listItem-327 MuiMenuItem-gutters-385" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-389">
                                                                              <ButtonBase className="MuiListItem-root-387 MuiListItem-default-390 MuiListItem-gutters-395 MuiListItem-divider-394 MuiListItem-button-396 MuiMenuItem-root-384 RSFMenu-listItem-327 MuiMenuItem-gutters-385" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} component="li" focusVisibleClassName="MuiListItem-focusVisible-389" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                <li className="MuiButtonBase-root-399 MuiListItem-root-387 MuiListItem-default-390 MuiListItem-gutters-395 MuiListItem-divider-394 MuiListItem-button-396 MuiMenuItem-root-384 RSFMenu-listItem-327 MuiMenuItem-gutters-385" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                                  <inject-ItemContent-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                    <ItemContent theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" item={{...}} depth={0} tabIndex={-1} onFocus={[Function]} leaf={false} showExpander={false}>
                                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-402">
                                                                                            Group 1
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-330">
                                                                                        <ListItemIcon className="RSFMenu-listItemIcon-330" classes={{...}}>
                                                                                          <div className="MuiListItemIcon-root-408 RSFMenu-listItemIcon-330">
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-324">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-324">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-324">
                                                                                                  <SvgIcon className="RSFMenu-icon-324" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-409 RSFMenu-icon-324" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </div>
                                                                                        </ListItemIcon>
                                                                                      </WithStyles(ListItemIcon)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-418" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-418" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </li>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </MenuItem>
                                                                  </WithStyles(MenuItem)>
                                                                </Branch>
                                                              </inject-Branch-with-app>
                                                            </Item>
                                                          </inject-Item-with-app>
                                                        </ul>
                                                      </List>
                                                    </WithStyles(List)>
                                                  </MenuList>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <div style={{...}}>
                    <WithStyles(inject-Link)>
                      <inject-Link classes={{...}}>
                        <Link classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                          <a data-moov-link="on" className="RSFLink-root-350" style={[undefined]} onClick={[Function]} href={[undefined]} />
                        </Link>
                      </inject-Link>
                    </WithStyles(inject-Link)>
                  </div>
                  <noscript>
                    <ul />
                  </noscript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
